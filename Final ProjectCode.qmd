---
title: "Final Project Code"
format: html
editor: visual
---

## [**RESEARCH QUESTION- 1**]{.underline}

**How does physical activity level influence sleep quality across different age groups?**

```{r}
# Load necessary libraries
library(glmnet)
library(plotly)
library(ggplot2)
# Load the dataset
data1 <- read.csv("C:/Users/ACER/Desktop/New folder/Sai Sriram Uppada/FinalProject/Sleep_health_and_lifestyle_dataset.csv")  

# Replace with the path to the original dataset

# Prepare the data
# Assuming 'Quality_of_Sleep' is a continuous variable and both 'Age' and 'Physical_Activity_Level' are already numerical.
x <- model.matrix(Quality.of.Sleep ~ Age * Physical.Activity.Level, data = data1)[, -1]  # removing intercept
y <- data1$Quality.of.Sleep

# Fit Lasso Regression model
lasso_model <- glmnet(x, y, alpha = 1)  # alpha = 1 for Lasso

# Cross-validation for optimal lambda
cv_lasso <- cv.glmnet(x, y, alpha = 1)

coef(lasso_model, s = cv_lasso$lambda.min)
# Plotting the coefficient path
plot(lasso_model, xvar = "lambda", label = TRUE)
# Create a ggplot



# Plotting cross-validation plot to see the optimal lambda
plot(cv_lasso)

# Creating a new data frame for predictions
age_range <- seq(min(data1$Age), max(data1$Age), by = 1)
pa_levels <- seq(min(data1$Physical.Activity.Level), max(data1$Physical.Activity.Level), length.out = 100)

# Creating a grid of Age and Physical Activity levels
grid_data <- expand.grid(Age = age_range, Physical.Activity.Level = pa_levels)
# Correcting newdata matrix generation
grid_data_matrix <- model.matrix(~ Age * Physical.Activity.Level, data = grid_data)[, -1]
# Predicting using the correct newx argument
grid_data$Quality_of_Sleep_Pred <- predict(lasso_model, newx = grid_data_matrix, s = cv_lasso$lambda.min)

# Plotting
a = ggplot(grid_data, aes(x = Age, y = Physical.Activity.Level, fill = Quality_of_Sleep_Pred)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = median(grid_data$Quality_of_Sleep_Pred), space = "Lab", name = "Predicted\nSleep Quality") +
  labs(x = "Age", y = "Physical Activity Level", title = "Predicted Sleep Quality Across Age and Physical Activity Levels") +
  theme_minimal() +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())

ggplotly(a)



```

## [**RESEARCH QUESTION- 2**]{.underline}

**What are the key predictors influencing sleep quality, and how can we predict sleep quality based on lifestyle and health metrics?**

```{r}
library(randomForest)
library(ggplot2)
library(plotly)
library(dplyr)

# Load the dataset
data1 <- read.csv("C:/Users/ACER/Desktop/New folder/Sai Sriram Uppada/FinalProject/Sleep_health_and_lifestyle_dataset.csv")  # Replace with the path to the original dataset

# Split the "Blood Pressure" into "Systolic BP" and "Diastolic BP"
data1 <- data1 %>%
  mutate(Systolic.BP = as.integer(sub("/.*", "", Blood.Pressure)),
         Diastolic.BP = as.integer(sub(".*/", "", Blood.Pressure)))

# Fit Random Forest model to predict sleep quality
set.seed(123)  # for reproducibility
rf_model <- randomForest(Quality.of.Sleep ~ Age + Physical.Activity.Level + Stress.Level + Heart.Rate + Systolic.BP + Diastolic.BP, 
                         data=data1, importance=TRUE, ntree=500)

# Check out the model summary
print(rf_model)

# Variable importance plot
importance_data <- importance(rf_model)
varImpPlot(rf_model)

# Predict sleep quality
predicted_quality <- predict(rf_model, data1)

# Create a plot of actual vs predicted sleep quality
data1$Predicted_Quality_of_Sleep <- predicted_quality
a = ggplot(data1, aes(x=Quality.of.Sleep, y=Predicted_Quality_of_Sleep)) +
  geom_point(alpha=0.5) +
  geom_smooth(method='lm', color='red') +
  labs(x="Actual Sleep Quality", y="Predicted Sleep Quality", title="Actual vs Predicted Sleep Quality") +
  theme_minimal()


# Convert ggplot object to an interactive plotly object
ggplotly(a)


```

## [**RESEARCH QUESTION- 3**]{.underline}

**Does BMI predict the presence of sleep apnea?**

```{r}
# Load necessary libraries
library(readr)
library(dplyr)
library(glmnet)
library(ggplot2)

# Load the dataset (adjust the file path as needed)
sleep_data <-read.csv("C:/Users/ACER/Desktop/New folder/Sai Sriram Uppada/FinalProject/Sleep_health_and_lifestyle_dataset.csv") 

# Rename columns if needed to match the code
# Assuming "BMI.Category" is the column containing BMI information
colnames(sleep_data) <- gsub("\\.", "_", colnames(sleep_data))  

# Prepare the predictor variables and the response
# Assuming "BMI_Category" is the column name for BMI information
sleep_data$Sleep_Apnea <- as.factor(ifelse(sleep_data$Sleep_Disorder == "Sleep Apnea", 1, 0))
predictors <- model.matrix(~ BMI_Category, sleep_data)[, -1]
response <- sleep_data$Sleep_Apnea


# Fit logistic regression model
fit_apnea <- glmnet(predictors, response, family = "binomial")

# Print coefficients
coef(fit_apnea)



# Perform cross-validation
cv_fit_apnea <- cv.glmnet(predictors, response, family = "binomial")
best_lambda_apnea <- cv_fit_apnea$lambda.min


# Load necessary libraries
library(pROC)

# Make predictions on the training set
predictions_train <- predict(cv_fit_apnea, type = "response", s = "lambda.min", newx = predictors)

# Calculate ROC curve
roc_curve <- roc(as.numeric(response) -1 , predictions_train)  

# Plot ROC curve with AUC
plot(roc_curve, main = "ROC Curve", col = "blue")
legend("bottomright", legend = paste("AUC =", round(auc(roc_curve), 2)), col = "blue", lty = 1)

```
